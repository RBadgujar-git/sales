<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="btncancel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABJJJREFUeF7t
        nT1vHFUYha0g8mcoI+9CSXZIhwgfhgIR0aCglPwCqigBVzQpUmKBxDeiQSh1Sigx4UtAkSgRSGh3jYKT
        DPMu52pgObb3zr3nzuJ5j/RIUXazZ+Y58u44sjwbHo/H4/F4PB6Px+PxeDweT0zqrUdOTiebL8yq0Tuz
        yWi3YdZQHzPsnHbtHKfV5vN2zjj9fjOtxs9OJ6Pvlw722DOfjL5rhngGGsqn3tp6aDYZb7ODGxTV5pv1
        6xsnoKVcXP6/uAwtZWJvO+QgBk3zlnQWerSxDx97/2MHMXB+KPLBvLja4QcweKanR1vQpMtssvkuK3cW
        7ECTLk3JjaVSp2UXmnRp3v+npNhpMDfQpAsrdlqgSRdW6rRAky6s1GmBJl1YqdMCTbqwUqcFmnRhpanM
        z1b17IlH6WP/N6BJF1aawvzpM/X9L7+q9z/7tJ6deYw+Jzd7r760gD2WCjTpwkq7EuTXd35bUGKEvVde
        rB/8+HP94KdfmhHO0eekAE26sNIuLMsvMUKQH7oUI0CTLqw0loPkBxQjLMsP5B4BmnRhpTEcJT+Qc4SD
        5AdyjgBNurDSGP68eoVKYOx/8lHy1dFR8gO5RoAmXVhpFI3Q/Q/fpxIYKV8Jq8o3/h4g/coImnRhpdEU
        GKEP+QY06cJKOyEcoS/5BjTpwko7IxihT/kGNOnCSpPIOELf8g1o0oWVJpNhhHWQb0CTLqw0CwkjrIt8
        A5p0YaXZ6DDC3vlzayPfgCZdWGlWIkeob97mf79ECfkGNOnCSrMTO8IRlJJvQJMurFRCphFKyjegSRdW
        KiNxhNLyDWjShZVK6ThCH/INaNKFlcppRrj3xedUNOXWnXrvwsv8tcRAky6sVE3MdX5glf+2UABNurBS
        JV3kB/oYAZp0YaUqUuQHSo8ATbqwUgU55AdKjgBNurDS3OSUHyg1AjTpwkpzEiPfLjVjro5KjABNurDS
        XMTKX1znL75PeI8+h6EeAZp0YaU56CQ//Ps1GgGadGGlqSTJD6zJCNCkCytNIYv8wBqMAE26sNKuZJUf
        6HkEaNKFlXZBIj/Q4wjQpAsrjUUqP9DTCNCkCyuNoYj8gI3w8Qf0tRmLn0Wtxvy1VgSadGGlMdy7do2e
        /DLJ8gMRXwl339rmrxEBNOnCSmOYP/l4ff/6dSogkE1+YIURcsg3oEkXVhrLYSNklx84ZIRc8g1o0oWV
        doGNIJMfWB7h9q/13e2L/LkdgSZdWGlX/jmCXH4gjCCQb0CTLqw0BRvBPpiLyA80I/zx2gX+WCLQpAsr
        dVqgSRdW6rRAky6s1GmBJl1YqdMCTbqwUqcFmnRhpU4LNOniv7TvUH6HJl2akm+WSp3A6fHX0KQL7hHA
        D2DwjN+GJl3s5gW83JlOxs9Bky71qVMPz6vRt+wAhozdxKLYXTXszhHsIIbMvBo/BT1lYneOYAcySKrR
        JWgpF7ttR1P+xn8OZnhc7uUWJiF254ghfibYORd/2zko9sFsNy9oDmzHroWP4zdri3Nqzq35845d7dg5
        4/Q9Ho/H4/F4PB6Px+PxeDyeFbKx8RfhXlIUR6JNFQAAAABJRU5ErkJggg==
</value>
  </data>
</root>