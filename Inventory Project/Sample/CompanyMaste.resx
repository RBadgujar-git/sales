<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnminimize.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Oou/Mmtv+w1ipkNWEpu8bgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnCancel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABJJJREFUeF7t
        nT1vHFUYha0g8mcoI+9CSXZIhwgfhgIR0aCglPwCqigBVzQpUmKBxDeiQSh1Sigx4UtAkSgRSGh3jYKT
        DPMu52pgObb3zr3nzuJ5j/RIUXazZ+Y58u44sjwbHo/H4/F4PB6Px+PxeDweT0zqrUdOTiebL8yq0Tuz
        yWi3YdZQHzPsnHbtHKfV5vN2zjj9fjOtxs9OJ6Pvlw722DOfjL5rhngGGsqn3tp6aDYZb7ODGxTV5pv1
        6xsnoKVcXP6/uAwtZWJvO+QgBk3zlnQWerSxDx97/2MHMXB+KPLBvLja4QcweKanR1vQpMtssvkuK3cW
        7ECTLk3JjaVSp2UXmnRp3v+npNhpMDfQpAsrdlqgSRdW6rRAky6s1GmBJl1YqdMCTbqwUqcFmnRhpanM
        z1b17IlH6WP/N6BJF1aawvzpM/X9L7+q9z/7tJ6deYw+Jzd7r760gD2WCjTpwkq7EuTXd35bUGKEvVde
        rB/8+HP94KdfmhHO0eekAE26sNIuLMsvMUKQH7oUI0CTLqw0loPkBxQjLMsP5B4BmnRhpTEcJT+Qc4SD
        5AdyjgBNurDSGP68eoVKYOx/8lHy1dFR8gO5RoAmXVhpFI3Q/Q/fpxIYKV8Jq8o3/h4g/coImnRhpdEU
        GKEP+QY06cJKOyEcoS/5BjTpwko7IxihT/kGNOnCSpPIOELf8g1o0oWVJpNhhHWQb0CTLqw0CwkjrIt8
        A5p0YaXZ6DDC3vlzayPfgCZdWGlWIkeob97mf79ECfkGNOnCSrMTO8IRlJJvQJMurFRCphFKyjegSRdW
        KiNxhNLyDWjShZVK6ThCH/INaNKFlcppRrj3xedUNOXWnXrvwsv8tcRAky6sVE3MdX5glf+2UABNurBS
        JV3kB/oYAZp0YaUqUuQHSo8ATbqwUgU55AdKjgBNurDS3OSUHyg1AjTpwkpzEiPfLjVjro5KjABNurDS
        XMTKX1znL75PeI8+h6EeAZp0YaU56CQ//Ps1GgGadGGlqSTJD6zJCNCkCytNIYv8wBqMAE26sNKuZJUf
        6HkEaNKFlXZBIj/Q4wjQpAsrjUUqP9DTCNCkCyuNoYj8gI3w8Qf0tRmLn0Wtxvy1VgSadGGlMdy7do2e
        /DLJ8gMRXwl339rmrxEBNOnCSmOYP/l4ff/6dSogkE1+YIURcsg3oEkXVhrLYSNklx84ZIRc8g1o0oWV
        doGNIJMfWB7h9q/13e2L/LkdgSZdWGlX/jmCXH4gjCCQb0CTLqw0BRvBPpiLyA80I/zx2gX+WCLQpAsr
        dVqgSRdW6rRAky6s1GmBJl1YqdMCTbqwUqcFmnRhpU4LNOniv7TvUH6HJl2akm+WSp3A6fHX0KQL7hHA
        D2DwjN+GJl3s5gW83JlOxs9Bky71qVMPz6vRt+wAhozdxKLYXTXszhHsIIbMvBo/BT1lYneOYAcySKrR
        JWgpF7ttR1P+xn8OZnhc7uUWJiF254ghfibYORd/2zko9sFsNy9oDmzHroWP4zdri3Nqzq35845d7dg5
        4/Q9Ho/H4/F4PB6Px+PxeDyeFbKx8RfhXlIUR6JNFQAAAABJRU5ErkJggg==
</value>
  </data>
</root>